第五章、初始化与清理
=======================================================================


5.1、构造器
---------------------------------------------------------------------

创建一个初始化构造器： 

和C++中的一样，采用和类相同的名称 就会自动创建初始化构造器::

    class Rock{
        Rock(){
            System.out.print("Rock ");
        }
    }

    public class Simple{
        public static void main(String[] args){
            for(int i =0; i<5;i++){
                new Rock();
            }
        }
    }


没有任何参数的叫 ``默认构造器`` 也叫 ``无参构造器``

在Java中  初始化 和创建时 绑定在一起的  两者不能分离


5.2、重载
---------------------------------------------------------------------

两个初始方法相同但是参数不同::

    class Rock{
        Rock(){
            System.out.print("Rock ");
        }

        Rock(int num){
            System.out.print("Rock ");
        }

    }

5.3、默认构造器
---------------------------------------------------------------------

如果类中没有构造器 编译器会自动创建一个，

比如上面的代码中  就不能这样::

    new Rock();

5.4、 this关键字
---------------------------------------------------------------------


略


5.5、清理：终结处理和垃圾回收
---------------------------------------------------------------------

finalize 是用来处理内存 的   int 那些 定义  string 那些定义的  

所以不好过多的使用finalize 

还有介绍很多文字性的  垃圾回收问题 这里就不一一打出来了 还不是深入学习的时候

5.6、成员初始化
---------------------------------------------------------------------

略

5.7、构造器初始化
---------------------------------------------------------------------
略

5.8、数组初始化
---------------------------------------------------------------------

略

5.9、枚举类型
---------------------------------------------------------------------

略 

