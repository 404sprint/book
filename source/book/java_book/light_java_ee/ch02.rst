第二章、JSP、Servlet相关技术详解
=======================================================================

2.1、构建web应用
---------------------------------------------------------------------

1. 项目目录下创建 WEB-INF 目录  注意大小写

2. 进入WEB-INF目录 新建web.xml输入,从Tomcat项目下拷贝过来也行

::

    <?xml version="1.0" encoding="UTF-8"?>
    <web-app version="2.5" 
        xmlns="http://java.sun.com/xml/ns/javaee" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
      <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
      </welcome-file-list>
    </web-app>


3. 新建 classes 和 lib 文件夹

4. 返回项目目录创建 index.jsp 文件 就可以了

::

    <%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
    <%
    String path = request.getContextPath();
    String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
    %>

    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
    <html>
      <head>
        <base href="<%=basePath%>">
        
        <title>My JSP 'index.jsp' starting page</title>
        <meta http-equiv="pragma" content="no-cache">
        <meta http-equiv="cache-control" content="no-cache">
        <meta http-equiv="expires" content="0">    
        <meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
        <meta http-equiv="description" content="This is my page">
        <!--
        <link rel="stylesheet" type="text/css" href="styles.css">
        -->
      </head>
      
      <body>
        This is my JSP page. <br>
      </body>
    </html>


2.2、JSP基本原理
---------------------------------------------------------------------

JSP 的本质就是Servlet 一个特殊的Java类。

每个JSP页面就是一个Servlet实例

2.3、JSP注释
---------------------------------------------------------------------

<%-- 这是注释 --%>

2.4、JSP声明
---------------------------------------------------------------------
::

    public int count;
    public String info(){
        return "hello";
    }

2.5、输出表达式
---------------------------------------------------------------------

<%= count++ %>
<%=info() %>


其实就是php嵌套html代码一样

2.6、JSP脚本
------------------------------------------------------------------

html代码和Java混在一起

就是可以在JSP执行Java代码::

    <%
    for(int i=0;i<10;i++){
    %>
        <h1>这是i: <%=i%></h1>
    <%
    }
    %>

2.7、JSP的3个编译指令
------------------------------------------------------------------

常见的编译指令有如下三个：
 - page  该指令是针对当前页面的指令
 - include 用于指定包含另一个页面
 - taglib 用于定义和访问自定义标签

编译指令的语法格式如下::
    
    <% 编译指令名 属性名="属性值"...%>

page指令通常位于JSP顶端 一个JSP页面可以有多个page指令 如法如下::

    <% page contentType='text/html;charset=UTF-8' language="java" errorPage=""%>
    <% page import="java.sql.*">

page指令个属性的意义:
 - language : 声明当前JSP页面使用的脚本语言的种类，默认是java所以无须设置
 - extends ：指定JSP页面编译锁产生的Java类所继承的父类
 - import ： 用来导入包  默认会导入java.lang.* java.servlet.* 等包
 - session ：设定这个JSP页面是否需要HTTP Session
 - buffer ： 指定输出缓冲区的大小
 - autoFlush ：当输出缓冲区即将溢出时 是否需要强制输出缓冲区的内容
 - info ： 设置该JSP程序的信息，可以看做其说明
 - errorPage     ： 指定错误处理的页面

2.8、JSP的7个动作指令
------------------------------------------------------------------

JSP动作指令主要有如下7个： 
 - jsp:forward  执行页面转向 将请求的处理转发到下一个页面
 - jsp:param 用于传递参数 必须与求他支持参数的标签一起使用
 - jsp:include 用于动态引入一个JSP页面
 - jsp:plugin 用于下载JavaBean 或applet 到客户端执行
 - jsp:useBean 创建一个JavaBean示例的属性值
 - jsp:setProperty 设置JavaBean示例的属性值
 - jsp:getProperty 输出JavaBean示例的属性值

2.9、JSP脚本中的9个内置对象
------------------------------------------------------------------

内容略

其实有很多内容 但是现在是快速的过   没必要耗时在这里   

以后正式使用如果不会再回来看

2.10、Servlet介绍
------------------------------------------------------------------

前面已经介绍过  JSP本质就是Servlet

Servlet是一个特殊的Java类 这个Java类必须继承HttpServlet 

Servlet提供不同的方法用于相应客户端请求：
 - doGet 响应get请求
 - doPost 响应post请求
 - doPut 响应put请求
 - doDelete 响应 delete请求

另外HttpServlet还包含两个方法：
 - init 初始化
 - destroy  销毁Servlet实例

2.11、JSP 2 的自定义标签
------------------------------------------------------------------

略

2.12、Filter 介绍
------------------------------------------------------------------

拦截器   预处理

拦截对应请求  比如权限验证

内容略 

这里还介绍了伪静态

2.13、Listener 介绍
------------------------------------------------------------------


事件监听

略

2.14、JSP 2特性
------------------------------------------------------------------

JSP2 主要增加了如下特性：
 - 直接配置JSP属性
 - 表达式语言
 - 简化的自定义标签API
 - Tag文件语法

其他内容略


2.15、Servlet 3.0 新特性
------------------------------------------------------------------

servlet 3 抛弃了采用web.xml 配置servlet filter  listener 的繁琐步骤 

允许直接使用 annotation 修饰他们 

2.16、本章小结
------------------------------------------------------------------

本章介绍了 相关的知识： JSP Servlet Listener Filter 等 覆盖了JSP所有的知识点，

包括JSP的3个编译指令、7个动作指令 9个内置对象 

还介绍了Servlet3 的新规范 使用 annotation 修饰即可
















